# api contains configuration regarding Cocov's API component
api:
  # version is the API version of the API image to be pulled
  version: ""

  # secretKeyBase is used by Rails cryptographic facilities. It is recommended
  # to be composed of a 32-byte, base64 encoded random value.
  # This value may be provided as a secretKeyRef or configMapKeyRef.
  secretKeyBase: ""

  # cryptoKey is used by Cocov's encryption facilities to encode sensitive data
  # stored on databases and memory-storage components such as Redis. Must be
  # composed of 32 hexadecimal characters.
  # This value may be provided as a secretKeyRef or configMapKeyRef.
  cryptoKey: ""

  # automaticallyMigrate indicates whether deploying a new version of Cocov
  # automatically executes its migrations. If disabled, do notice that the API
  # startupProbe will wait up to 10 minutes for the migrations to be applied
  # before accepting requests.
  # This value may be provided as a secretKeyRef or configMapKeyRef.
  automaticallyMigrate: true

  github:
    # orgName is the name of the GitHub organization in which Cocov is installed
    # This value may be provided as a secretKeyRef or configMapKeyRef.
    orgName: ""

    # allowOutsideCollaborators indicates whether users under the organization's
    # outside collaborators can log in into this Cocov instance.
    # See also: https://docs.github.com/en/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization
    # This value may be provided as a secretKeyRef or configMapKeyRef.
    allowOutsideCollaborators: true

    # app contains information regarding the GitHub's App created and installed
    # to manage Cocov on the GitHub Organization it is being installed into.
    # It should be found over at https://github.com/organizations/<your org name>/settings/apps
    # after clicking on the application you configured as part of Cocov's setup
    # process. For more information, refer to Cocov's documentation.
    app:

      # id is the GitHub's App numeric identifier, obtained from the
      # application's configuration "General" page, over at the "About"
      # section as "App ID"
      # This value may be provided as a secretKeyRef or configMapKeyRef.
      id: ""

      # installationID is the installation identifier generated by GitHub
      # after the GitHub App created during the Cocov's setup process is
      # effectively installed on the organization. The value can be obtained
      # by visiting the GitHub App page (see documentation for the app: section
      # on this file), choosing "Install App" on the leftmost menu, and then
      # clicking on the gear button. The installation ID will be available
      # as the last component of the page's URL. For instance:
      # https://github.com/organizations/cocov-ci/settings/installations/12345678
      # The installation ID for the "cocov-ci" organization would be "12345678".
      # This value may be provided as a secretKeyRef or configMapKeyRef.
      installationID: ""

      # privateKey is the private key provided by GitHub when creating the
      # organization's app, used to sign access token requests. In case a new
      # private key needs to be created, visit the "General" page of your
      # organization's app, scroll to "Private keys" and select
      # "Generate a private key". This value must contain the private key
      # downloaded from GitHub, base64-encoded.
      # This value may be provided as a secretKeyRef or configMapKeyRef.
      privateKey: ""

      # clientID is the GitHub's App client ID, obtained from the application's
      # configuration "General" page, over at the "About" section as
      # "Client ID". Not to be confused with App ID.
      # This value may be provided as a secretKeyRef or configMapKeyRef.
      clientID: ""

      # clientSecret is the value of the GitHub's app Client Secret used to
      # authenticate users through GitHub. It can be generated from the
      # application's configuration "General" page, over at the "About" section
      # and clicking on "Generate a new client secret" button.
      # This value may be provided as a secretKeyRef or configMapKeyRef.
      clientSecret: ""

      # webhookSecret is the secret value passed to the GitHub App's webhook
      # configuration and is used to secure hashes received from it.
      # This value may be provided as a secretKeyRef or configMapKeyRef.
      webhookSecret: ""

  # db contains information to allow Cocov's API to communicate with its Postgres
  # database.
  db:
    # host is either an IP, hostname, or FQDN of the database server.
    # This value may be provided as a secretKeyRef or configMapKeyRef.
    host: ""

    # port is the port to be used to connect to the database server.
    # This value may be provided as a secretKeyRef or configMapKeyRef.
    port: "5432"

    # name is the name of the database to be used to store Cocov's relational
    # data.
    # This value may be provided as a secretKeyRef or configMapKeyRef.
    name: ""

    # username is the username Cocov will use to authenticate against the
    # database.
    # This value may be provided as a secretKeyRef or configMapKeyRef.
    username: ""

    # password is the password Cocov will use to authenticate against the
    # database.
    # This value may be provided as a secretKeyRef or configMapKeyRef.
    password: ""

  # badger must be configured if the badger component is enabled. The API
  # requires its base URL in order to generate valid URLs for the UI facility.
  badger:
    # baseURL is the public URL for the badger service. It is usually the
    # protocol offered by your ingress, followed by one of the domains
    # configured to be used by it. Format is http[s]://URL.TO.BADGER
    # This value may be provided as a secretKeyRef or configMapKeyRef.
    baseURL: ""

  # ingress allows the chart to automatically configure an ingress for common
  # operation. This ingress will be used by users, and can be protected behind
  # a VPN, for instance. By default, it is disabled so a custom ingress can be
  # configured.
  ingress:
    # enabled indicates whether this builtin ingress should be used. If
    # disabled, an ingress for common use must be configured manually.
    enabled: false

    # Annotations is an unstructured key value map stored with a resource that
    # may be set by external tools to store and retrieve arbitrary metadata.
    # They are not queryable and should be preserved when modifying objects.
    # More info http://kubernetes.io/docs/user-guide/annotations
    annotations: { }

    # Host is the fully qualified domain name of a network host, as defined by
    # RFC 3986. Note the following deviations from the "host" part of the URI
    # as defined in RFC 3986: 1. IPs are not allowed. Currently, an
    # IngressRuleValue can only apply to the IP in the Spec of the parent
    # Ingress.
    hosts: [ ]

    # tls is a list of TLS configuration to be provided to the ingress.
    tls: [ ]

    # ingressClassName is the name of an IngressClass cluster resource.
    # Ingress controller implementations use this field to know whether they
    # should be serving this Ingress resource, by a transitive connection
    # (controller -> IngressClass -> Ingress resource).
    ingressClassName:

  # publicIngress is used by the only endpoint of the API that must either be
  # exposed to public internet, or proxied by your infrastructure to receive
  # events from GitHub Webhooks
  publicIngress:
    # enabled indicates whether this builtin ingress should be used. If
    # disabled, an ingress for common use must be configured manually.
    enabled: false

    # Annotations is an unstructured key value map stored with a resource that
    # may be set by external tools to store and retrieve arbitrary metadata.
    # They are not queryable and should be preserved when modifying objects.
    # More info http://kubernetes.io/docs/user-guide/annotations
    annotations: { }

    # Host is the fully qualified domain name of a network host, as defined by
    # RFC 3986. Note the following deviations from the "host" part of the URI
    # as defined in RFC 3986: 1. IPs are not allowed. Currently, an
    # IngressRuleValue can only apply to the IP in the Spec of the parent
    # Ingress.
    hosts: [ ]

    # tls is a list of TLS configuration to be provided to the ingress.
    tls: [ ]

    # ingressClassName is the name of an IngressClass cluster resource.
    # Ingress controller implementations use this field to know whether they
    # should be serving this Ingress resource, by a transitive connection
    # (controller -> IngressClass -> Ingress resource).
    ingressClassName:

  # replicaCount is the number of API replicas to run at a given point of time.
  # If HPA is enabled, this value is ignored.
  replicaCount: 1

  # hpa configures the HPA for the API resource
  hpa:
    # enabled defines whether HPA should be configured
    enabled: false

    # labels provides extra labels for the HPA resource
    labels: { }

    # minReplicas define the minimum number of replicas the HPA should maintain
    minReplicas: 1

    # maxReplicas define the maximum number of replicas the HPA may create
    maxReplicas: 1

    # targetCPUUtilizationPercentage creates a new metric for the HPA to observe
    # average CPU utilization.
    targetCPUUtilizationPercentage:

    # targetMemoryUtilizationPercentage creates a new metric for the HPA to
    # observe average memory utilization.
    targetMemoryUtilizationPercentage:

    # metrics allows custom metrics to be added to the HPA other than the ones
    # already defined in the fields above.
    metrics: [ ]

  resources: { }
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }
  podAnnotations: { }
  podSecurityContext: { }
  securityContext: { }
  labels: { }

# sidekiq contains configuration regarding Cocov's Sidekiq component
sidekiq:
  # replicaCount is the number of sidekiq replicas to run at a given point of
  # time.
  # If HPA is enabled, this value is ignored.
  replicaCount: 1

  # hpa configures the HPA for the sidekiq resource
  hpa:
    # enabled defines whether HPA should be configured
    enabled: false

    # labels provides extra labels for the HPA resource
    labels: { }

    # minReplicas define the minimum number of replicas the HPA should maintain
    minReplicas: 1

    # maxReplicas define the maximum number of replicas the HPA may create
    maxReplicas: 1

    # targetCPUUtilizationPercentage creates a new metric for the HPA to observe
    # average CPU utilization.
    targetCPUUtilizationPercentage:

    # targetMemoryUtilizationPercentage creates a new metric for the HPA to
    # observe average memory utilization.
    targetMemoryUtilizationPercentage:

    # metrics allows custom metrics to be added to the HPA other than the ones
    # already defined in the fields above.
    metrics: [ ]

  resources: { }
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }
  podAnnotations: { }
  podSecurityContext: { }
  securityContext: { }
  labels: { }

# storage defines where API will store repositories commits. In case volumes are
# used, the same volume configuration will be applied to "worker" and "sidekiq"
# components. Only "local" or "s3" must be enabled at a single time. Enabling
# both will prevent this chart from being applied.
storage:
  # local configures api, worker, and sidekiq services to read/write to a local
  # path within their containers. The path must be mounted through a volume.
  local:
    # enabled sets whether the storage mode is enabled for this Cocov instance.
    enabled: false
    # volume is a volume description that will be provided to Pod's `volumes`
    # properties. Please do notice that:
    # 1. `name` is optional and will be ignored if provided.
    # 2. volumes must be ReadWriteMany. (TODO @vito: Do they?)
    # See https://kubernetes.io/docs/concepts/storage/volumes/#persistentvolumeclaim
    # for further information.
    volume: { }
    # mountPath is the path on which the configured volume will be mounted on
    # the pod.
    # This value may be provided as a secretKeyRef or configMapKeyRef.
    mountPath: "/data/git-storage"

  # s3 configures api, worker, and sidekiq services to read/write from a bucket
  # from AWS S3 or any service implementing its API.
  s3:
    # enabled sets whether the storage mode is enabled for this Cocov instance.
    enabled: false
    # bucket is the name of the S3 bucket that will be used on both API and worker
    # instances.
    # This value may be provided as a secretKeyRef or configMapKeyRef.
    bucketName:

# cache holds values for configuring Cocov's artifact and tool caches, which
# when available, allows plugins to store arbitrary data to speed up checks
cache:
  # version is the cache version of the cache image to be pulled
  version: ""

  # enabled defines whether the cache facility is enabled
  enabled: false

  # apiToken is a Cocov Service Token cache instances will use to authenticate
  # against the instance's API.
  # This value may be provided as a secretKeyRef or configMapKeyRef.
  apiToken: ""

  # maxPackageSize indicates the maximum size allowed for a single cache object
  # to be uploaded to the service. Values must be in a size format composed of
  # a numeric value followed by a size unit, like the ones made available by
  # Kubernetes. Zero means no limit.
  # This value may be provided as a secretKeyRef or configMapKeyRef.
  packageMaxSize: 0Mi

  # cacheStorage defines storage settings for the cache service. One of the
  # provided modes must be enabled, and only one must be enabled at a given
  # time. Enabling more than a single mode will prevent this chart from being
  # applied.
  cacheStorage:
    # local contains settings for the local storage mode, which uses a "local"
    # path on the cache service to store data. The path must be mounted through
    # a volume.
    local:
      # enabled sets whether this storage mode is enabled for cache instances
      enabled: false

      # volume is a volume description that will be provided to Pod's `volumes`
      # properties. Please do notice that:
      # 1. `name` is optional and will be ignored if provided.
      # 2. volumes must be ReadWriteMany. (TODO @vito: Do they?)
      # See https://kubernetes.io/docs/concepts/storage/volumes/#persistentvolumeclaim
      # for further information.
      volume: { }

      # mountPath is the path on which the configured volume will be mounted on
      # the pod.
      # This value may be provided as a secretKeyRef or configMapKeyRef.
      mountPath: "/data/cache"

    # s3 contains settings for the s3 storage mode, which uses a bucket from
    # AWS s3 or any other service that implements its API to store cache data.
    s3:
      # enabled sets whether this storage mode is enabled for cache instances
      enabled: false

      # bucket is the name of the S3 bucket that will be used to store cache
      # data.
      # This value may be provided as a secretKeyRef or configMapKeyRef.
      bucketName: ""

  # repositoryMaxSize sets a maximum size of data that can be stored by plugins
  # on a repository basis. When a repository reaches or extrapolates this limit,
  # cached data is automatically evicted on a later-used order. Values must be
  # in a size format composed of a numeric value followed by a size unit, like
  # the ones made available by Kubernetes. Zero means no limit.
  # This value may be provided as a secretKeyRef or configMapKeyRef.
  repositoryMaxSize: 0Mi

  # replicaCount is the number of cache replicas to run at a given point of
  # time.
  # If HPA is enabled, this value is ignored.
  replicaCount: 1

  # hpa configures the HPA for the cache resource
  hpa:
    # enabled defines whether HPA should be configured
    enabled: false

    # labels provides extra labels for the HPA resource
    labels: { }

    # minReplicas define the minimum number of replicas the HPA should maintain
    minReplicas: 1

    # maxReplicas define the maximum number of replicas the HPA may create
    maxReplicas: 1

    # targetCPUUtilizationPercentage creates a new metric for the HPA to observe
    # average CPU utilization.
    targetCPUUtilizationPercentage:

    # targetMemoryUtilizationPercentage creates a new metric for the HPA to
    # observe average memory utilization.
    targetMemoryUtilizationPercentage:

    # metrics allows custom metrics to be added to the HPA other than the ones
    # already defined in the fields above.
    metrics: [ ]

  resources: { }
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }
  podAnnotations: { }
  podSecurityContext: { }
  securityContext: { }
  labels: { }

# redis is a required group of values that defines Redis URLs for several
# different Cocov facilities. In case one does not intend to use different
# servers for each component, using different databases is recommended. URLs
# must be provided using the following format: redis[s]://[[USER]:PASSWORD]@HOST[:PORT]/DATABASE_ID
# See also: https://redis.io/commands/select/
redis:
  # commonURL is the base URL for a redis instance that Cocov will use for primary
  # operations. Those operations are essential for normal operation.
  # This value may be provided as a secretKeyRef or configMapKeyRef.
  commonURL: ""

  # cacheURL is the URL for a Redis instance or database to used for caching
  # operations. Although the instance must be accessible, data loss should not
  # affect normal operation, only possibly slow it down.
  # This value may be provided as a secretKeyRef or configMapKeyRef.
  cacheURL: ""

  # sidekiqURL is the URL for a Redis used exclusively by Sidekiq to schedule
  # and perform background operations.
  # This value may be provided as a secretKeyRef or configMapKeyRef.
  sidekiqURL: ""

# badger holds values for configuring Cocov's Badger generator, usually used
# by users to include project health information on Readmes. This component
# must be exposed publicly, since GitHub employs a proxy mechanism to load
# remote images.
badger:
  # enabled defines whether the badger facility is enabled
  enabled: false

  # version is the badger version of the image to be pulled
  version: ""

  # apiToken is a Cocov Service Token badger instances will use to authenticate
  # against the instance's API.
  # This value may be provided as a secretKeyRef or configMapKeyRef.
  apiToken: ""

  # ingress allows the chart to automatically configure an ingress for common
  # operation. This ingress must be exposed to the internet, as GitHub proxies
  # image requests for users, so even in case the user has VPN access, and
  # Badger is available through it, images would still fail to load.
  ingress:
    # enabled indicates whether this builtin ingress should be used. If
    # disabled, an ingress for common use must be configured manually.
    enabled: false

    # Annotations is an unstructured key value map stored with a resource that
    # may be set by external tools to store and retrieve arbitrary metadata.
    # They are not queryable and should be preserved when modifying objects.
    # More info http://kubernetes.io/docs/user-guide/annotations
    annotations: { }

    # Host is the fully qualified domain name of a network host, as defined by
    # RFC 3986. Note the following deviations from the "host" part of the URI
    # as defined in RFC 3986: 1. IPs are not allowed. Currently, an
    # IngressRuleValue can only apply to the IP in the Spec of the parent
    # Ingress.
    hosts: [ ]

    # tls is a list of TLS configuration to be provided to the ingress.
    tls: [ ]

    # ingressClassName is the name of an IngressClass cluster resource.
    # Ingress controller implementations use this field to know whether they
    # should be serving this Ingress resource, by a transitive connection
    # (controller -> IngressClass -> Ingress resource).
    ingressClassName:

  # replicaCount is the number of badger replicas to run at a given point of
  # time.
  # If HPA is enabled, this value is ignored.
  replicaCount: 1

  # hpa configures the HPA for the badger resource
  hpa:
    # enabled defines whether HPA should be configured
    enabled: false

    # labels provides extra labels for the HPA resource
    labels: { }

    # minReplicas define the minimum number of replicas the HPA should maintain
    minReplicas: 1

    # maxReplicas define the maximum number of replicas the HPA may create
    maxReplicas: 1

    # targetCPUUtilizationPercentage creates a new metric for the HPA to observe
    # average CPU utilization.
    targetCPUUtilizationPercentage:

    # targetMemoryUtilizationPercentage creates a new metric for the HPA to
    # observe average memory utilization.
    targetMemoryUtilizationPercentage:

    # metrics allows custom metrics to be added to the HPA other than the ones
    # already defined in the fields above.
    metrics: [ ]

  resources: { }
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }
  podAnnotations: { }
  podSecurityContext: { }
  securityContext: { }
  labels: { }


# ui contains configuration regarding Cocov's web UI component
ui:
  # version is the UI version of the UI image to be pulled
  version: ""

  # externalURL represents the complete base URL the users use to access Cocov.
  # The URL may be hosted behind a VPN, but must be accessible to your users;
  # the same URL is used by the API facility to generate URLs used by GitHub to
  # direct users to Cocov's internal pages. Format is http[s]://domain.for.cocov
  # This value may be provided as a secretKeyRef or configMapKeyRef.
  externalURL: ""

  # ingress allows the chart to automatically configure an ingress for common
  # operation. This ingress will be used by users, and can be protected behind
  # a VPN, for instance. By default, it is disabled so a custom ingress can be
  # configured.
  ingress:
    # enabled indicates whether this builtin ingress should be used. If
    # disabled, an ingress for common use must be configured manually.
    enabled: false

    # Annotations is an unstructured key value map stored with a resource that
    # may be set by external tools to store and retrieve arbitrary metadata.
    # They are not queryable and should be preserved when modifying objects.
    # More info http://kubernetes.io/docs/user-guide/annotations
    annotations: { }

    # Host is the fully qualified domain name of a network host, as defined by
    # RFC 3986. Note the following deviations from the "host" part of the URI
    # as defined in RFC 3986: 1. IPs are not allowed. Currently, an
    # IngressRuleValue can only apply to the IP in the Spec of the parent
    # Ingress.
    hosts: [ ]

    # tls is a list of TLS configuration to be provided to the ingress.
    tls: [ ]

    # ingressClassName is the name of an IngressClass cluster resource.
    # Ingress controller implementations use this field to know whether they
    # should be serving this Ingress resource, by a transitive connection
    # (controller -> IngressClass -> Ingress resource).
    ingressClassName:

  # replicaCount is the number of UI replicas to run at a given point of time.
  # If HPA is enabled, this value is ignored.
  replicaCount: 1

  # hpa configures the HPA for the UI resource
  hpa:
    # enabled defines whether HPA should be configured
    enabled: false

    # labels provides extra labels for the HPA resource
    labels: { }

    # minReplicas define the minimum number of replicas the HPA should maintain
    minReplicas: 1

    # maxReplicas define the maximum number of replicas the HPA may create
    maxReplicas: 1

    # targetCPUUtilizationPercentage creates a new metric for the HPA to observe
    # average CPU utilization.
    targetCPUUtilizationPercentage:

    # targetMemoryUtilizationPercentage creates a new metric for the HPA to
    # observe average memory utilization.
    targetMemoryUtilizationPercentage:

    # metrics allows custom metrics to be added to the HPA other than the ones
    # already defined in the fields above.
    metrics: [ ]

  resources: { }
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }
  podAnnotations: { }
  podSecurityContext: { }
  securityContext: { }
  labels: { }

# worker contains configuration regarding Cocov's worker component, responsible
# for running check jobs.
worker:
  # version is the version of the worker image to be pulled
  version: ""

  # maxParallelJobs indicates how many commits may be executed in parallel. Each
  # worker replica will take at most the number defined here. Keep in mind that
  # each commit check may spawn an arbitrary number of plugins.
  # This value may be provided as a secretKeyRef or configMapKeyRef.
  maxParallelJobs: 5

  # apiToken is a Cocov Service Token worker instances will use to authenticate
  # against the instance's API.
  # This value may be provided as a secretKeyRef or configMapKeyRef.
  apiToken: ""

  # replicaCount is the number of badger replicas to run at a given point of
  # time.
  # If HPA is enabled, this value is ignored.
  replicaCount: 1

  # hpa configures the HPA for the Worker resource
  hpa:
    # enabled defines whether HPA should be configured
    enabled: false

    # labels provides extra labels for the HPA resource
    labels: { }

    # minReplicas define the minimum number of replicas the HPA should maintain
    minReplicas: 1

    # maxReplicas define the maximum number of replicas the HPA may create
    maxReplicas: 1

    # targetCPUUtilizationPercentage creates a new metric for the HPA to observe
    # average CPU utilization.
    targetCPUUtilizationPercentage:

    # targetMemoryUtilizationPercentage creates a new metric for the HPA to
    # observe average memory utilization.
    targetMemoryUtilizationPercentage:

    # metrics allows custom metrics to be added to the HPA other than the ones
    # already defined in the fields above.
    metrics: [ ]

  resources: { }
  dindResources: { }
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }
  podAnnotations: { }
  podSecurityContext: { }
  securityContext: { }
  labels: { }


general:
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }
  podAnnotations: { }
  podSecurityContext: { }
  securityContext: { }
  imagePullPolicy: IfNotPresent
  labels: { }
  revisionHistoryLimit:

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

defaultVersions:
  api: "0.1.0"
  cache: "0.1.0"
  worker: "0.1.0"
  badger: "0.1.0"
  ui: "0.1.0"
