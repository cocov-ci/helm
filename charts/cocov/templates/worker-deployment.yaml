apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cocov-chart.fullname" . }}-worker
  labels:
    {{- include "cocov-chart.labels" . | nindent 4 }}
spec:
  {{- if .Values.general.revisionHistoryLimit }}
  revisionHistoryLimit: {{ .Values.general.revisionHistoryLimit }}
  {{- end }}
  {{- if not .Values.worker.hpa.enabled }}
  replicas: {{ .Values.worker.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cocov-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: worker
        {{- with (mergeOverwrite .Values.general.podAnnotations .Values.worker.podAnnotations) }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        dev.cocov.k8s/component: worker
        {{- $defaultSelectors := (include "cocov-chart.selectorLabels" .) | fromYaml }}
        {{- range $key, $value := mergeOverwrite $defaultSelectors .Values.worker.labels .Values.general.labels }}
        {{ $key }}: {{ toYaml $value }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "cocov-chart.serviceAccountName" . }}
      securityContext:
        {{- range $key, $value := mergeOverwrite .Values.general.podSecurityContext .Values.worker.podSecurityContext }}
        {{ $key }}: {{ toYaml $value }}
        {{- end }}
      containers:
        - name: dind
          env:
            - name: DOCKER_TLS_CERTDIR
              value: /certs
          volumeMounts:
            - mountPath: /certs
              name: dind-certs
          image: docker:dind
          securityContext:
            privileged: true
            {{- range $key, $value := mergeOverwrite .Values.general.securityContext .Values.worker.securityContext }}
            {{ $key }}: {{ toYaml $value }}
            {{- end }}
          ports:
            - containerPort: 2376
          resources:
           {{- toYaml .Values.worker.dindResources | nindent 12 }}
        - name: worker
          env:
          {{- $commonKeys := (dict
            "DOCKER_SOCKET"         "tcp://localhost:2376"
            "REDIS_URL"             .Values.redis.commonURL
            "DOCKER_TLS_CA_PATH"    "/certs/client/ca.pem"
            "DOCKER_TLS_CERT_PATH"  "/certs/client/cert.pem"
            "DOCKER_TLS_KEY_PATH"   "/certs/client/key.pem"
            "MAX_PARALLEL_JOBS"     .Values.worker.maxParallelJobs
            "API_URL"               (printf "http://%s" (include "clusterLocalHost" (list "api" .)))
            "SERVICE_TOKEN"         .Values.worker.apiToken
          ) -}}
          {{- range $k, $v := $commonKeys -}}
          {{ include "envVar" (list $k $v) | nindent 10 }}
          {{ end }}
          {{ if and .Values.storage.local.enabled .Values.storage.s3.enabled -}}
          {{ fail "Only a single storage mode must be enabled at a single time. Review configuration for cocov.storage."}}
          {{- end -}}
          {{- if .Values.storage.s3.enabled -}}
          {{- include "envVar" (list "GIT_SERVICE_STORAGE_MODE" "s3") | nindent 10 }}
          {{- include "envVar" (list "GIT_SERVICE_S3_BUCKET_NAME" .Values.storage.s3.bucketName) | nindent 10 }}
          {{- else if .Values.storage.local.enabled -}}
          {{- include "envVar" (list "GIT_SERVICE_STORAGE_MODE" "local") | nindent 10 }}
          {{- include "envVar" (list "GIT_SERVICE_LOCAL_STORAGE_PATH" .Values.storage.local.mountPath) | nindent 10 }}
          {{- else -}}
          {{ fail "No storage mode is configured. Review configuration for cocov.storage"}}
          {{- end -}}
          {{- if .Values.cache.enabled }}
          {{- include "envVar" (list "CACHE_SERVER_URL" (printf "http://%s" (include "clusterLocalHost" (list "cache" .)))) | nindent 10 }}
          {{- end }}
          securityContext:
            {{- range $key, $value := mergeOverwrite .Values.general.securityContext .Values.worker.securityContext }}
            {{ $key }}: {{ toYaml $value }}
            {{- end }}
          image: {{ include "dockerHubImage" (list "worker" (.Values.worker.version | default .Values.defaultVersions.worker )) }}
          imagePullPolicy: {{ .Values.general.imagePullPolicy | default "IfNotPresent" }}
          volumeMounts:
            - mountPath: /certs
              name: dind-certs
          {{- if .Values.storage.local.volume }}
            - mountPath: {{ .Values.storage.local.mountPath }}
              name: cocov-git-storage-volume
          {{- end }}
          ports:
            - containerPort: 4000
              name: probes
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /system/probes/liveness
              port: probes
          readinessProbe:
            httpGet:
              path: /system/probes/readiness
              port: probes
          resources:
            {{- toYaml .Values.worker.resources | nindent 12 }}
      volumes:
        - name: dind-certs
          emptyDir:
            medium: Memory
      {{- if .Values.storage.local.volume }}
        {{- list (mergeOverwrite .Values.storage.local.volume ("{ name: cocov-git-storage-volume }" | fromYaml)) | toYaml | nindent 8 }}
      {{- end }}
      {{- with mergeOverwrite .Values.general.nodeSelector .Values.worker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with mergeOverwrite .Values.general.affinity .Values.worker.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with concat .Values.general.tolerations .Values.worker.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
